// Generated by ScalaBuff, the Scala Protocol Buffers compiler. DO NOT EDIT!
// source: singlequoted.proto

package resources.generated

final case class SingleQuote (
	single_Quoted_Field: Option[String] = Some("NA")
) extends com.google.protobuf.GeneratedMessageLite
	with com.google.protobuf.MessageLite.Builder
	with net.sandrogrzicic.scalabuff.Message[SingleQuote]
	with net.sandrogrzicic.scalabuff.Parser[SingleQuote] {

	def setSingle_Quoted_Field(_f: String) = copy(single_Quoted_Field = Some(_f))

	def clearSingle_Quoted_Field = copy(single_Quoted_Field = None)

	def writeTo(output: com.google.protobuf.CodedOutputStream) {
		if (single_Quoted_Field.isDefined) output.writeString(1, single_Quoted_Field.get)
	}

	def getSerializedSize = {
		import com.google.protobuf.CodedOutputStream._
		var __size = 0
		if (single_Quoted_Field.isDefined) __size += computeStringSize(1, single_Quoted_Field.get)

		__size
	}

	def mergeFrom(in: com.google.protobuf.CodedInputStream, extensionRegistry: com.google.protobuf.ExtensionRegistryLite): SingleQuote = {
		import com.google.protobuf.ExtensionRegistryLite.{getEmptyRegistry => _emptyRegistry}
		var __single_Quoted_Field: Option[String] = single_Quoted_Field

		def __newMerged = SingleQuote(
			__single_Quoted_Field
		)
		while (true) in.readTag match {
			case 0 => return __newMerged
			case 10 => __single_Quoted_Field = Some(in.readString())
			case default => if (!in.skipField(default)) return __newMerged
		}
		null
	}

	def mergeFrom(m: SingleQuote) = {
		SingleQuote(
			m.single_Quoted_Field.orElse(single_Quoted_Field)
		)
	}

	def getDefaultInstanceForType = SingleQuote.defaultInstance
	def clear = getDefaultInstanceForType
	def isInitialized = true
	def build = this
	def buildPartial = this
	def parsePartialFrom(cis: com.google.protobuf.CodedInputStream, er: com.google.protobuf.ExtensionRegistryLite) = mergeFrom(cis, er)
	override def getParserForType = this
	def newBuilderForType = getDefaultInstanceForType
	def toBuilder = this
	def toJson(indent: Int = 0): String = {
		val indent0 = "\n" + ("\t" * indent)
		val (indent1, indent2) = (indent0 + "\t", indent0 + "\t\t")
		val sb = StringBuilder.newBuilder
		sb
			.append("{")
			if (`single_Quoted_Field`.isDefined) { sb.append(indent1).append("\"single_Quoted_Field\": ").append("\"").append(`single_Quoted_Field`.get).append("\"").append(',') }
		if (sb.last.equals(',')) sb.length -= 1
		sb.append(indent0).append("}")
		sb.toString()
	}

}

object SingleQuote {
	@scala.beans.BeanProperty val defaultInstance = new SingleQuote()

	def parseFrom(data: Array[Byte]): SingleQuote = defaultInstance.mergeFrom(data)
	def parseFrom(data: Array[Byte], offset: Int, length: Int): SingleQuote = defaultInstance.mergeFrom(data, offset, length)
	def parseFrom(byteString: com.google.protobuf.ByteString): SingleQuote = defaultInstance.mergeFrom(byteString)
	def parseFrom(stream: java.io.InputStream): SingleQuote = defaultInstance.mergeFrom(stream)
	def parseDelimitedFrom(stream: java.io.InputStream): Option[SingleQuote] = defaultInstance.mergeDelimitedFromStream(stream)

	val SINGLE_QUOTED_FIELD_FIELD_NUMBER = 1

	def newBuilder = defaultInstance.newBuilderForType
	def newBuilder(prototype: SingleQuote) = defaultInstance.mergeFrom(prototype)

}

object Singlequoted {
	def registerAllExtensions(registry: com.google.protobuf.ExtensionRegistryLite) {
	}

	private val fromBinaryHintMap = collection.immutable.HashMap[String, Array[Byte] ⇒ com.google.protobuf.GeneratedMessageLite](
		 "SingleQuote" -> (bytes ⇒ SingleQuote.parseFrom(bytes))
	)

	def deserializePayload(payload: Array[Byte], payloadType: String): com.google.protobuf.GeneratedMessageLite = {
		fromBinaryHintMap.get(payloadType) match {
			case Some(f) ⇒ f(payload)
			case None    ⇒ throw new IllegalArgumentException(s"unimplemented deserialization of message payload of type [${payloadType}]")
		}
	}
}
