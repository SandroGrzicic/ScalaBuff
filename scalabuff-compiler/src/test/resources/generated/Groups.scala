// Generated by ScalaBuff, the Scala Protocol Buffers compiler. DO NOT EDIT!
// source: groups.proto

package resources.generated

final case class Groups (

) extends com.google.protobuf.GeneratedMessageLite
	with com.google.protobuf.MessageLite.Builder
	with net.sandrogrzicic.scalabuff.Message[Groups] {



	def writeTo(output: com.google.protobuf.CodedOutputStream) {
	}

	lazy val getSerializedSize = {
		import com.google.protobuf.CodedOutputStream._
		var size = 0

		size
	}

	def mergeFrom(in: com.google.protobuf.CodedInputStream, extensionRegistry: com.google.protobuf.ExtensionRegistryLite): Groups = {
		import com.google.protobuf.ExtensionRegistryLite.{getEmptyRegistry => _emptyRegistry}

		def __newMerged = Groups(

		)
		while (true) in.readTag match {
			case 0 => return __newMerged
			case default => if (!in.skipField(default)) return __newMerged
		}
		null
	}

	def mergeFrom(m: Groups) = {
		Groups(

		)
	}

	def getDefaultInstanceForType = Groups.defaultInstance
	def clear = getDefaultInstanceForType
	def isInitialized = true
	def build = this
	def buildPartial = this
	def newBuilderForType = getDefaultInstanceForType
	def toBuilder = this
}

object Groups {
	@reflect.BeanProperty val defaultInstance = new Groups()


	def apply(message: Array[Byte]): Groups = defaultInstance.mergeFrom(message)
	def apply(message: com.google.protobuf.ByteString): Groups = defaultInstance.mergeFrom(message)

	def newBuilder = defaultInstance.newBuilderForType
	def newBuilder(prototype: Groups) = defaultInstance.mergeFrom(prototype)

}

object GroupsTest {
	def registerAllExtensions(registry: com.google.protobuf.ExtensionRegistryLite) {
	}

}
